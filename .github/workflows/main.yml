name: Build Custom ROM

on:
  workflow_dispatch:
    inputs:
      rom_manifest_url:
        description: 'ROM manifest URL (e.g. https://github.com/LineageOS/android.git)'
        required: true
        default: 'https://github.com/LineageOS/android.git'
      rom_branch:
        description: 'ROM branch (e.g. lineage-20.0)'
        required: true
        default: 'lineage-20.0'
      device_codename:
        description: 'Device codename (e.g. whyred)'
        required: true
        default: 'X6837'
      device_tree_url:
        description: 'https://github.com/whoisgabutuniverseshit/android_device_infinix_X6837.git'
        required: true
      device_tree_branch:
        description: 'Lineage-21'
        required: true
        default: 'Lineage-21'
      vendor_tree_url:
        description: 'https://github.com/hunter2986767/vendor_infinix_X6837.git'
        required: true
      vendor_tree_branch:
        description: 'Vendor tree Git branch'
        required: true
        default: 'fourteen'
      kernel_tree_url:
        description: 'https://github.com/whoisgabutuniverseshit/device_infinix_X6837-kernel.git'
        required: true
      kernel_tree_branch:
        description: 'Kernel tree Git branch'
        required: true
        default: 'Lineage-20'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison build-essential ccache curl flex g++-multilib \
            gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev \
            lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libxml2 \
            libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip \
            zlib1g-dev openjdk-8-jdk repo

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> $GITHUB_ENV

      - name: Sync ROM Source
        run: |
          mkdir rom && cd rom
          repo init -u ${{ github.event.inputs.rom_manifest_url }} -b ${{ github.event.inputs.rom_branch }}
          repo sync --force-sync -j$(nproc)

      - name: Clone Device Tree, Vendor, and Kernel
        run: |
          cd rom
          mkdir -p device/xiaomi/${{ github.event.inputs.device_codename }}
          git clone -b ${{ github.event.inputs.device_tree_branch }} ${{ github.event.inputs.device_tree_url }} device/xiaomi/${{ github.event.inputs.device_codename }}
          git clone -b ${{ github.event.inputs.vendor_tree_branch }} ${{ github.event.inputs.vendor_tree_url }} vendor/xiaomi/${{ github.event.inputs.device_codename }}
          git clone -b ${{ github.event.inputs.kernel_tree_branch }} ${{ github.event.inputs.kernel_tree_url }} kernel/xiaomi/${{ github.event.inputs.device_codename }}

      - name: Configure CCACHE
        run: |
          sudo apt-get install -y ccache
          export USE_CCACHE=1
          ccache -M 10G

      - name: Build ROM
        run: |
          cd rom
          source build/envsetup.sh
          lunch lineage_${{ github.event.inputs.device_codename }}-userdebug
          mka bacon -j$(nproc)

      - name: Upload ROM ZIP
        uses: actions/upload-artifact@v3.1.3
        with:
            name: ROM-ZIP
            path: rom/out/target/product/${{ github.event.inputs.device_codename }}/*.zip
