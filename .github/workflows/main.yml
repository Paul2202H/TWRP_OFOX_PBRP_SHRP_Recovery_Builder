name: Build Custom ROM

on:
  workflow_dispatch:
    inputs:
      manifest_url:
        description: 'ROM manifest URL (e.g., https://github.com/LineageOS/android.git)'
        required: true
        default: 'https://github.com/LineageOS/android.git'
      manifest_branch:
        description: 'ROM branch (e.g., lineage-20.0)'
        required: true
        default: 'lineage-20.0'
      device_codename:
        description: 'Device codename (e.g., whyred)'
        required: true
        default: 'whyred'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-8-jdk bc bison build-essential curl flex \
            g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev \
            lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev \
            libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool \
            squashfs-tools xsltproc zip zlib1g-dev

      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> $GITHUB_ENV

      - name: Sync ROM Source
        run: |
          mkdir rom && cd rom
          repo init -u ${{ github.event.inputs.manifest_url }} -b ${{ github.event.inputs.manifest_branch }}
          repo sync -c --no-tags --no-clone-bundle --optimized-fetch --prune -j$(nproc)

      - name: Setup Build Environment
        run: |
          cd rom
          source build/envsetup.sh
          lunch lineage_${{ github.event.inputs.device_codename }}-userdebug

      - name: Build ROM
        run: |
          cd rom
          mka bacon -j$(nproc)

      - name: Upload ROM ZIP
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ROM-ZIP
          path: rom/out/target/product/${{ github.event.inputs.device_codename }}/lineage-*.zip
